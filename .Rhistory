install.packages("shiny")
library(shiny)
runExample("01_hello")
activity <- read.csv("activity.csv")
daily.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$date), na.rm = TRUE)
interval.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
daily.steps <- setNames(daily.steps, c("Date", "Total.Steps"))
interval.steps <- setNames(interval.steps, c("Interval", "Total.Steps"))
mean.interval.steps <- aggregate(FUN = mean, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
mean.interval.steps <- setNames(mean.interval.steps, c("Interval", "Mean.Steps"))
median.daily.steps <- median(daily.steps$Total.Steps)
mean.daily.steps <- mean(daily.steps$Total.Steps)
interval.mean <- aggregate(FUN = mean, activity$steps,  by = list(activity$interval), na.rm = TRUE)
max.mean.interval.step <- interval.mean[which.max(x = interval.mean$x),]
activity <- read.csv("activity.csv")
setwd("~/Programs/r/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
daily.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$date), na.rm = TRUE)
interval.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
daily.steps <- setNames(daily.steps, c("Date", "Total.Steps"))
interval.steps <- setNames(interval.steps, c("Interval", "Total.Steps"))
mean.interval.steps <- aggregate(FUN = mean, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
mean.interval.steps <- setNames(mean.interval.steps, c("Interval", "Mean.Steps"))
median.daily.steps <- median(daily.steps$Total.Steps)
mean.daily.steps <- mean(daily.steps$Total.Steps)
interval.mean <- aggregate(FUN = mean, activity$steps,  by = list(activity$interval), na.rm = TRUE)
max.mean.interval.step <- interval.mean[which.max(x = interval.mean$x),]
library(mice)
imputed.data <- mice(method = mice.impute.norm, data = activity)
imputed.data <- mice(data = activity)
View(max.mean.interval.step)
imputed.data$call
imputed.data$data
imputed.data$nmis
imputed.data$method
imputed.data$pad
imputed.data$predictorMatrix
imputed.data$imp
imputed.data <- mice(data = activity, method = "norm.nob", m=1)
mice.impute.norm.nob(imputed.data$data, imputed.data$nmis)
mice.impute.norm.nob(imputed.data$data, imputed.data$m, imputed.data$nmis)
activity <- read.csv("activity.csv")
daily.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$date), na.rm = TRUE)
interval.steps <- aggregate(FUN = sum, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
daily.steps <- setNames(daily.steps, c("Date", "Total.Steps"))
interval.steps <- setNames(interval.steps, c("Interval", "Total.Steps"))
mean.interval.steps <- aggregate(FUN = mean, x = activity$steps, by = list(activity$interval), na.rm = TRUE)
mean.interval.steps <- setNames(mean.interval.steps, c("Interval", "Mean.Steps"))
median.daily.steps <- median(daily.steps$Total.Steps)
mean.daily.steps <- mean(daily.steps$Total.Steps)
interval.mean <- aggregate(FUN = mean, activity$steps,  by = list(activity$interval), na.rm = TRUE)
max.mean.interval.step <- interval.mean[which.max(x = interval.mean$x),]
plot(mean.interval.steps, type = 'l', col = "Blue", xlab = "Time Interval", ylab = "Mean Steps")
sum(is.na(activity$steps))
#IMPUTE SHIT
library(mice)
imputed.data <- mice(data = activity, method = "norm.nob", m=1)
mean.interval.steps
mean.interval.steps$interval
mean.interval.steps$Interval
mean.interval.steps$Interval
mean.interval.steps$Interval["20"]
mean.interval.steps$Interval["845"]
mean.interval.steps$Interval[Interval == 850]
mean.interval.steps$Interval[mean.interval.steps$Interval == 850]
mean.interval.steps$Mean.Steps[mean.interval.steps$Interval == 850]
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval]
}
get.mean <- activity[,1]
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval]
}
get.mean(activity[,1])
get.mean(activity[1,])
get.mean(activity)
get.mean(activity[1])
get.mean(activity[2])
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row$steps))
row$steps = get.mean(row)
}
imputed.data <- apply(X = activity, FUN = impute.from.mean)
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
apply(activity, function(x) is.na(x))
apply(activity, FUN = function(x) is.na(x))
apply(activity$steps, FUN = function(x) is.na(x))
apply(activity$steps, FUN = function(x) { is.na(x) })
apply(x = activity$steps, FUN = function(x) { is.na(x) })
apply(X = activity$steps, FUN = function(x) { is.na(x) })
View(activity)
for ( i in activity$steps ) {is.na(i)}
for ( i in activity$steps ) {print(is.na(i))}
for ( i in activity$steps ) { if (is.na(i)) {i = 1  }}
View(activity)
for ( i in activity$steps ) { if (is.na(i)) {activity$steps[i] = 1  }}
View(activity)
View(activity)
get.mean(activity[1])
get.mean <- function(data) {
as.numeric(mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval])
}
get.mean(activity[1])
get.mean <- function(data) {
print(mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval])
}
get.mean(activity[1])
get.mean(activity)
get.mean(activity[,1])
get.mean(activity$steps[1])
get.mean(activity$steps)
get.mean(activity)
get.mean(activity[,1])
get.mean(activity[1:10])
(activity[1:10]
)
activity[,1:10]
activity[1:10,]
activity[1:,]
activity[1:-1,]
activity[1:0,]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == 200]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == 1800]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == "
1800"]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == "1800"]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == as.numeric(230)]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == as.numeric("230")]
mean.interval.steps
mean.interval.steps$Mean.Steps[200]
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
}
imputed.data <- apply(X = activity, FUN = impute.from.mean)
get.mean(activity)
is.na(get.mean(activity))
sum(is.na(get.mean(activity)))
sum(! is.na(get.mean(activity)))
imputed.data <- apply(X = activity, FUN = impute.from.mean, MARGIN = 2)
imputed.data <- apply(X = activity, FUN = impute.from.mean, MARGIN = 1)
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
else
row[2] <- row[2]
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
for (row in activity) { print(row)}
for (row[2] in activity) { print(row[2])}
for (row in activity[2]) { print(row)}
for (row in activity[3]) { print(row)}
for (row in activity[1]) { print(row)}
install.packages("Amelia")
require(amelia)
require("amelia")
require(Amelia)
amelia(x = activity)
amelia(x = activity, ts="interval")
amelia(activity, ts = "interval", cs = "steps")
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row[1]))
row[1] <- get.mean(row)
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps[data$interval]
}
impute.from.mean <- function(row) {
if (is.na(row[1]))
row[1] <- get.mean(row)
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval])
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
}
imputed.data <- apply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval])
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(data) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == data$interval])
}
impute.from.mean <- function(row) {
if (is.na(row[2]))
row[2] <- get.mean(row)
}
imputed.data <- tapply(X = activity, FUN = impute.from.mean)
imputed.data <- apply(X = activity, FUN = impute.from.mean)
imputed.data <- apply(X = activity, MARGIN = 1, FUN = impute.from.mean)
imputed.data <- apply(X = activity, MARGIN = c(1, 2, 3), FUN = impute.from.mean)
imputed.data <- apply(X = activity, MARGIN = c(1, 2), FUN = impute.from.mean)
activity[1]
activity[,1]
activity[1,]
activity[1,][1]
activity[1:10,]
activity[1:10,][0]
activity[1:10,][1]
as.numerica(activity[1:10,][1])
as.numeric(activity[1:10,][1])
c(activity[1:10,][1])
c(activity[1:10,][1])
c(activity[1:10,][2])
c(activity[1:10,][3])
impute.from.mean <- function(row) {
if (is.na(row[1])
row[1] <- mean.interval.steps$Mean.Steps[mean.interval.steps$interval == row[3]])
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
mean.interval.steps
mean.interval.steps[1]
mean.interval.steps[1]
mean.interval.steps[,1]
mean.interval.steps[1]
activity
activity[1]
activity[,1]
lapply(activity, impute.from.mean)
activity[1]
activity[,1]
activity[1,]
activity[1,][1]
lapply(activity, function(x) x * x )
impute.from.mean <- function(row) {
if (is.na(row[,1])
row[1] <- mean.interval.steps$Mean.Steps[mean.interval.steps$interval == row[3]])
}
impute.from.mean <- function(row) {
if (is.na(row[,1]))
row[1] <- mean.interval.steps$Mean.Steps[mean.interval.steps$interval == row[3]])
}
mean.interval.steps$Mean.Steps
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == 100]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == 2355]
#IMPUTE SHIT
rbind(c(1:20), c(1:20))
cbind(c(1:20), c(1:20))
t <- cbind(c(1:20), c(1:20))
t
t[1]
t[,1]
t[,2]
t[2]
remove(t)
remove(i)
remove(imputed.data)
mapply(activity, FUN = impute.from.mean)
get.mean <- function(value) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == value])
}
get.mean <- function(value) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == value])
}
get.mean <- function(value) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == value]
}
get.mean(100)
get.mean(2300)
get.mean("2300")
get.mean(as.factor(2300))
mean.interval.steps
mean.interval.steps[1]
mean.interval.steps[1] == 2355
mean.interval.steps[mean.interval.steps[1] == 2355]
mean.interval.steps[
2355]
mean.interval.steps[mean.interval.steps[1] == 2355]
mean.interval.steps[mean.interval.steps[1] == 2355][2]
get.mean <- function(value) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == value][2]
}
get.mean(2355)
get.mean("2355")
get.mean(2355.0)
get.mean <- function(value) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == value][1]
}
get.mean(2355.0)
get.mean(2355)
get.mean
mean.interval.steps
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == 2355]
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == "2355"]
activity$steps[is.na(activity$steps)]
as.numeric(3)
as.numeric(3.2)
as.integer(3.2)
typeof(activity$steps)
activity2 <- activity
activity2$steps[is.na(activity2$steps)] <- activity2$interval
activity2[is.na(activity2$steps)] <- activity2$interval
t1 = (1:10)
t2 = (11:20)
c(t1, t2)
cbind(t1, t2)
rbind(t1, t2)
paste(t1, t2)
cbind(t1, t2)
t3 <- cbind(t1, t2)
t3
t3$1
t3$x
for (i, j in t3) {print(i)}
for (i j in t3) {print(i)}
for (i:j in t3) {print(i)}
mean.interval.steps
mean.interval.steps[,2]
interval.means <- mean.interval.steps[,2]
activity
t1 <- data.frame(c(activity$interval, mean.interval.steps), row.names = c("interval", "mean.steps"))
get.mean <- function(row) {
mean.interval.steps$Mean.Steps[mean.interval.steps$interval == row$interval]
}
get.mean(activity)
get.mean(activity[1])
get.mean(activity[,1])
get.mean(activity[1,])
get.mean(activity[1,][1])
mean.interval.steps
mean.interval.steps$steps
mean.interval.steps$Interval
mean.interval.steps$Interval == 2300
get.mean <- function(interval) {
mean.interval.steps$Mean.Steps[mean.interval.steps$Interval == interval]
}
get.mean <- function(interval) {
mean.interval.steps$Mean.Steps[mean.interval.steps$Interval == interval]
}
get.mean(2300)
get.mean <- function(interval) {
mean.interval.steps$Mean.Steps[mean.interval.steps$Interval == interval]
}
impute.from.mean <- function(row) {
if (is.na(row$steps)){
row$steps <- get.mean(row$interval)
}
}
imputed.data <- sapply(X = activity, FUN = impute.from.mean)
get.mean <- function(interval) {
mean.interval.steps$Mean.Steps[mean.interval.steps$Interval == interval]
}
impute.from.mean <- function(row) {
if (is.na(row$steps)){
row$steps <- get.mean(row$interval)
}
}
imputed.data <- apply(X = activity, FUN = impute.from.mean)
imputed.data <- apply(X = activity, FUN = impute.from.mean, margin = c(1, 2, 3))
imputed.data <- apply(X = activity, FUN = impute.from.mean, MARGIN = c(1, 2, 3))
imputed.data <- apply(X = activity, FUN = impute.from.mean, MARGIN = c(1, 2))
imputed.data <- apply(X = activity, FUN = impute.from.mean, MARGIN = c(2, 3))
sapply
lapply
tapply(activity, FUN = impute.from.mean)
tapply(activity, FUN = impute.from.mean, INDEX = c(1, 2))
impute.from.mean <- function(df) {
if (is.na(df$steps)){
df$steps <- get.mean(df$interval)
}
}
impute.from.mean <- function(df) {
if (is.na(df$steps)){
df$steps <- get.mean(df$interval)
}
}
impute.from.mean(activity)
View(activity)
View(activity)
View(activity2)
View(activity)
View(activity)
View(activity2)
View(activity2)
rm(activity2)
activity <- csv.read("activity.csv")
activity <- read.csv("activity.csv")
View(mean.interval.steps)
View(mean.interval.steps)
View(mean.interval.steps)
View(mean.interval.steps)
